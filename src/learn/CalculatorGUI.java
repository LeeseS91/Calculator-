/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package learn;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.script.ScriptEngineManager;
import javax.script.ScriptEngine;
import javax.script.ScriptException;
/**
 *
 * @author LeeseS
 */
public class CalculatorGUI extends javax.swing.JFrame {

    /**
     * Creates new form CalculatorGUI
     */
    List calculation= new ArrayList();
    int count=0;
    int intcount=0;
    int numInt=0;
    int nonIntcount=0;
    int nonNumInt=0;
    double value = 0;
    boolean equalsCheck=false;
    String input="";
    String[] numbers = new String[50];
    String[] nonNumbers = new String[50];
    List intIndex = new ArrayList();
    List nonintIndex = new ArrayList();
    public CalculatorGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        Display = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Button1 = new javax.swing.JButton();
        Button2 = new javax.swing.JButton();
        Button3 = new javax.swing.JButton();
        Button4 = new javax.swing.JButton();
        Button5 = new javax.swing.JButton();
        Button6 = new javax.swing.JButton();
        Button7 = new javax.swing.JButton();
        Button8 = new javax.swing.JButton();
        Button9 = new javax.swing.JButton();
        Button0 = new javax.swing.JButton();
        dotButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        minusButton = new javax.swing.JButton();
        plusButton = new javax.swing.JButton();
        divideButton = new javax.swing.JButton();
        Lbracket = new javax.swing.JButton();
        Rbracket = new javax.swing.JButton();
        squareButton = new javax.swing.JButton();
        equalsButton = new javax.swing.JButton();
        multiplyButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        Display.setText("Display");

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");

        Button1.setText("1");
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });

        Button2.setText("2");
        Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button2ActionPerformed(evt);
            }
        });

        Button3.setText("3");
        Button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button3ActionPerformed(evt);
            }
        });

        Button4.setText("4");
        Button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button4ActionPerformed(evt);
            }
        });

        Button5.setText("5");
        Button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button5ActionPerformed(evt);
            }
        });

        Button6.setText("6");
        Button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button6ActionPerformed(evt);
            }
        });

        Button7.setText("7");
        Button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button7ActionPerformed(evt);
            }
        });

        Button8.setText("8");
        Button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button8ActionPerformed(evt);
            }
        });

        Button9.setText("9");
        Button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button9ActionPerformed(evt);
            }
        });

        Button0.setText("0");
        Button0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button0ActionPerformed(evt);
            }
        });

        dotButton.setText(".");
        dotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dotButtonActionPerformed(evt);
            }
        });

        clearButton.setText("C");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        minusButton.setText("-");
        minusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButtonActionPerformed(evt);
            }
        });

        plusButton.setText("+");
        plusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButtonActionPerformed(evt);
            }
        });

        divideButton.setText("/");
        divideButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideButtonActionPerformed(evt);
            }
        });

        Lbracket.setText("(");
        Lbracket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LbracketActionPerformed(evt);
            }
        });

        Rbracket.setText(")");
        Rbracket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RbracketActionPerformed(evt);
            }
        });

        squareButton.setText("^2");
        squareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareButtonActionPerformed(evt);
            }
        });

        equalsButton.setText("=");
        equalsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalsButtonActionPerformed(evt);
            }
        });

        multiplyButton1.setText("x");
        multiplyButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Button0, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Button3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Button5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Button6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Button7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Button8, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Button9, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(plusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(minusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Lbracket, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(divideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Rbracket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(equalsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(multiplyButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(squareButton, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 13, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(squareButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(multiplyButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Button7, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button8, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button9, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button6, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lbracket, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Rbracket, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(minusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(divideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(plusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button0, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(equalsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button1ActionPerformed
        // TODO add your handling code here:
        if (equalsCheck==true){
            calculation.clear();
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=0;
            nonIntcount=0;
            numInt=0;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
        }
        calculation.add(1);    
        intIndex.add(count);
        if (intcount==0){
            numbers[numInt]="1";
            count=count+1;
            intcount=intcount+1;
        }else if((Integer)intIndex.get(intcount-1)==count-1) {
            numbers[numInt]=numbers[numInt]+"1";
            count=count+1;
            intcount=intcount+1;
        }else {
            numInt=numInt+1;
            numbers[numInt]="1";
            intcount=intcount+1;
            count=count+1;
        }
        

        input=input+calculation.get(count-1); 

        jLabel2.setText(input);
        //Display
        //return calculation;
    }//GEN-LAST:event_Button1ActionPerformed

    private void Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button2ActionPerformed
        // TODO add your handling code here:
        if (equalsCheck==true){
            calculation.clear();
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=0;
            nonIntcount=0;
            numInt=0;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
        }
        calculation.add(2);
        intIndex.add(count);
                if (intcount==0){
            numbers[numInt]="2";
            count=count+1;
            intcount=intcount+1;
        }else if((Integer)intIndex.get(intcount-1)==count-1) {
            numbers[numInt]=numbers[numInt]+"2";
            count=count+1;
            intcount=intcount+1;
        }else {
            numInt=numInt+1;
            numbers[numInt]="2";
            intcount=intcount+1;
            count=count+1;
        }
        input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_Button2ActionPerformed

    private void Button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button3ActionPerformed
        // TODO add your handling code here:
        if (equalsCheck==true){
            calculation.clear();
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=0;
            nonIntcount=0;
            numInt=0;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
        }
        calculation.add(3);
        intIndex.add(count);
                if (intcount==0){
            numbers[numInt]="3";
            count=count+1;
            intcount=intcount+1;
        }else if((Integer)intIndex.get(intcount-1)==count-1) {
            numbers[numInt]=numbers[numInt]+"3";
            count=count+1;
            intcount=intcount+1;
        }else {
            numInt=numInt+1;
            numbers[numInt]="3";
            intcount=intcount+1;
            count=count+1;
        }
                        input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_Button3ActionPerformed

    private void Button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button4ActionPerformed
        // TODO add your handling code here:
        if (equalsCheck==true){
            calculation.clear();
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=0;
            nonIntcount=0;
            numInt=0;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
        }
        calculation.add(4);
        intIndex.add(count);
                if (intcount==0){
            numbers[numInt]="4";
            count=count+1;
            intcount=intcount+1;
        }else if((Integer)intIndex.get(intcount-1)==count-1) {
            numbers[numInt]=numbers[numInt]+"4";
            count=count+1;
            intcount=intcount+1;
        }else {
            numInt=numInt+1;
            numbers[numInt]="4";
            intcount=intcount+1;
            count=count+1;
        }
                        input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_Button4ActionPerformed

    private void Button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button5ActionPerformed
        // TODO add your handling code here:
        if (equalsCheck==true){
            calculation.clear();
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=0;
            nonIntcount=0;
            numInt=0;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
        }
        calculation.add(5);
        intIndex.add(count);
                if (intcount==0){
            numbers[numInt]="5";
            count=count+1;
            intcount=intcount+1;
        }else if((Integer)intIndex.get(intcount-1)==count-1) {
            numbers[numInt]=numbers[numInt]+"5";
            count=count+1;
            intcount=intcount+1;
        }else {
            numInt=numInt+1;
            numbers[numInt]="5";
            intcount=intcount+1;
            count=count+1;
        }
                        input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_Button5ActionPerformed

    private void Button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button6ActionPerformed
        // TODO add your handling code here:
        if (equalsCheck==true){
            calculation.clear();
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=0;
            nonIntcount=0;
            numInt=0;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
        }
        calculation.add(6);
        intIndex.add(count);
                if (intcount==0){
            numbers[numInt]="6";
            count=count+1;
            intcount=intcount+1;
        }else if((Integer)intIndex.get(intcount-1)==count-1) {
            numbers[numInt]=numbers[numInt]+"6";
            count=count+1;
            intcount=intcount+1;
        }else {
            numInt=numInt+1;
            numbers[numInt]="6";
            intcount=intcount+1;
            count=count+1;
        }
                        input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_Button6ActionPerformed

    private void Button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button7ActionPerformed
        // TODO add your handling code here:
        if (equalsCheck==true){
            calculation.clear();
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=0;
            nonIntcount=0;
            numInt=0;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
        }
        calculation.add(7);
        intIndex.add(count);
                if (intcount==0){
            numbers[numInt]="7";
            count=count+1;
            intcount=intcount+1;
        }else if((Integer)intIndex.get(intcount-1)==count-1) {
            numbers[numInt]=numbers[numInt]+"7";
            count=count+1;
            intcount=intcount+1;
        }else {
            numInt=numInt+1;
            numbers[numInt]="7";
            intcount=intcount+1;
            count=count+1;
        }
                        input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_Button7ActionPerformed

    private void Button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button8ActionPerformed
        // TODO add your handling code here:
        if (equalsCheck==true){
            calculation.clear();
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=0;
            nonIntcount=0;
            numInt=0;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
        }
        calculation.add(8);
        intIndex.add(count);
        if (intcount==0){
            numbers[numInt]="8";
            count=count+1;
            intcount=intcount+1;
        }else if((Integer)intIndex.get(intcount-1)==count-1) {
            numbers[numInt]=numbers[numInt]+"8";
            count=count+1;
            intcount=intcount+1;
        }else {
            numInt=numInt+1;
            numbers[numInt]="8";
            intcount=intcount+1;
            count=count+1;
        }
                input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_Button8ActionPerformed

    private void Button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button9ActionPerformed
        // TODO add your handling code here:
        if (equalsCheck==true){
            calculation.clear();
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=0;
            nonIntcount=0;
            numInt=0;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
        }
        calculation.add(9);
        intIndex.add(count);
                if (intcount==0){
            numbers[numInt]="9";
            count=count+1;
            intcount=intcount+1;
        }else if((Integer)intIndex.get(intcount-1)==count-1) {
            numbers[numInt]=numbers[numInt]+"9";
            count=count+1;
            intcount=intcount+1;
        }else {
            numInt=numInt+1;
            numbers[numInt]="9";
            intcount=intcount+1;
            count=count+1;
        }
                        input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_Button9ActionPerformed

    private void Button0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button0ActionPerformed
        // TODO add your handling code here:
        if (equalsCheck==true){
            calculation.clear();
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=0;
            nonIntcount=0;
            numInt=0;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
        }
        calculation.add(0);
        intIndex.add(count);
        if (intcount==0){
            numbers[numInt]="0";
            count=count+1;
            intcount=intcount+1;
        }else if((Integer)intIndex.get(intcount-1)==count-1) {
            numbers[numInt]=numbers[numInt]+"0";
            count=count+1;
            intcount=intcount+1;
        }else {
            numInt=numInt+1;
            numbers[numInt]="0";
            intcount=intcount+1;
            count=count+1;
        }
                input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_Button0ActionPerformed

    private void dotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dotButtonActionPerformed
        // TODO add your handling code here:
        if (equalsCheck==true){
            calculation.clear();
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=0;
            nonIntcount=0;
            numInt=0;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
        }
        calculation.add(".");
        intIndex.add(count);
        if (intcount==0){
            numbers[numInt]=".";
            count=count+1;
            intcount=intcount+1;
        }else if((Integer)intIndex.get(intcount-1)==count-1) {
            numbers[numInt]=numbers[numInt]+".";
            count=count+1;
            intcount=intcount+1;
        }else {
            numInt=numInt+1;
            numbers[numInt]=".";
            intcount=intcount+1;
            count=count+1;
        }
                input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_dotButtonActionPerformed

    private void minusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButtonActionPerformed
        // TODO add your handling code here:
        if (equalsCheck==true){
            calculation.clear();
            calculation.add(value);
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=1;
            nonIntcount=0;
            numInt=1;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
            intIndex.add(count);
        }
        calculation.add("-");
        nonintIndex.add(count);
        if (nonIntcount==0){
            nonNumbers[nonNumInt]="-";
            count=count+1;
            nonIntcount=nonIntcount+1;
        }else {
            nonNumInt=nonNumInt+1;
            nonNumbers[nonNumInt]="-";
            nonIntcount=nonIntcount+1;
            count=count+1;
        }
                input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_minusButtonActionPerformed

    private void plusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButtonActionPerformed
        // TODO add your handling code here:
         if (equalsCheck==true){
            calculation.clear();
            calculation.add(value);
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=1;
            nonIntcount=0;
            numInt=1;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
            intIndex.add(count);
        }
        calculation.add("+");
        nonintIndex.add(count);
         if (nonIntcount==0){
            nonNumbers[nonNumInt]="+";
            count=count+1;
            nonIntcount=nonIntcount+1;
        }else {
            nonNumInt=nonNumInt+1;
            nonNumbers[nonNumInt]="+";
            nonIntcount=nonIntcount+1;
            count=count+1;
        }
        input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_plusButtonActionPerformed

    private void divideButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideButtonActionPerformed
        // TODO add your handling code here:
         if (equalsCheck==true){
            calculation.clear();
            calculation.add(value);
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=1;
            nonIntcount=0;
            numInt=1;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
            intIndex.add(count);
        }
        calculation.add("/");
        nonintIndex.add(count);
         if (nonIntcount==0){
            nonNumbers[nonNumInt]="/";
            count=count+1;
            nonIntcount=nonIntcount+1;
        }else {
            nonNumInt=nonNumInt+1;
            nonNumbers[nonNumInt]="/";
            nonIntcount=nonIntcount+1;
            count=count+1;
        }
                 input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_divideButtonActionPerformed

    private void LbracketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LbracketActionPerformed
        // TODO add your handling code here:
        if (equalsCheck==true){
            calculation.clear();
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=0;
            nonIntcount=0;
            numInt=0;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
        }
        calculation.add("(");
        nonintIndex.add(count);
         if (nonIntcount==0){
            nonNumbers[nonNumInt]="(";
            count=count+1;
            nonIntcount=nonIntcount+1;
        }else {
            nonNumInt=nonNumInt+1;
            nonNumbers[nonNumInt]="(";
            nonIntcount=nonIntcount+1;
            count=count+1;
        }
                 input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_LbracketActionPerformed

    private void RbracketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RbracketActionPerformed
        // TODO add your handling code here:
        if (equalsCheck==true){
            calculation.clear();
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=0;
            nonIntcount=0;
            numInt=0;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
        }
        calculation.add(")");
        nonintIndex.add(count);
         if (nonIntcount==0){
            nonNumbers[nonNumInt]=")";
            count=count+1;
            nonIntcount=nonIntcount+1;
        }else {
            nonNumInt=nonNumInt+1;
            nonNumbers[nonNumInt]=")";
            nonIntcount=nonIntcount+1;
            count=count+1;
        }
                 input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_RbracketActionPerformed

    private void squareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareButtonActionPerformed
        // TODO add your handling code here:
         if (equalsCheck==true){
            calculation.clear();
            calculation.add(value);
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=1;
            nonIntcount=0;
            numInt=1;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
            intIndex.add(count);
        }
        calculation.add("sq");
        nonintIndex.add(count);
         if (nonIntcount==0){
            nonNumbers[nonNumInt]="sq";
            count=count+1;
            nonIntcount=nonIntcount+1;
        } else {
            nonNumInt=nonNumInt+1;
            nonNumbers[nonNumInt]="sq";
            nonIntcount=nonIntcount+1;
            count=count+1;
        }
    }//GEN-LAST:event_squareButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        calculation.clear(); 
        nonintIndex.clear();
        intIndex.clear();
        intcount=0;
        nonIntcount=0;
        numInt=0;
        nonNumInt=0;
        count=0;
        input="";

        jLabel2.setText(input);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void equalsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalsButtonActionPerformed
        
        equalsCheck=true;
        int j =0;
        //System.out.println(input);
        
        int brackNo=0;
        boolean bracketOpen=false;
        for (j=0;j<=nonNumInt;j++){
            if (nonNumbers[j]=="("){
                if (bracketOpen==true){
                    brackNo=brackNo+1;
                }else{
                    bracketOpen=true;
                }
                
            }else if (nonNumbers[j]=="+"){
                if (j==0){
                    value=(double)Integer.parseInt(numbers[j])+(double)Integer.parseInt(numbers[j+1]);
                }else{
                    value=value+(double)Integer.parseInt(numbers[j+1]);
                }
            }else if (nonNumbers[j]=="-"){
                if (j==0){
                    value=(double)Integer.parseInt(numbers[j])-(double)Integer.parseInt(numbers[j+1]);
                }else{
                    value=value-(double)Integer.parseInt(numbers[j+1]);
                }
            }else if (nonNumbers[j]=="*"){
                if (j==0){
                    value=(double)Integer.parseInt(numbers[j])*(double)Integer.parseInt(numbers[j+1]);
                }else if(nonNumbers[j-1]!="/"){
                    value=value-(double)Integer.parseInt(numbers[j])+(double)Integer.parseInt(numbers[j])*(double)Integer.parseInt(numbers[j+1]);
                }else {
                    value=value*(double)Integer.parseInt(numbers[j+1]);
                }
            }else if (nonNumbers[j]=="/"){
                if (j==0){
                    value=(double)Integer.parseInt(numbers[j])/(double)Integer.parseInt(numbers[j+1]);
                }else {
                    value=value-(double)Integer.parseInt(numbers[j])+(double)Integer.parseInt(numbers[j])/(double)Integer.parseInt(numbers[j+1]);
                } /*else {
                    && (Integer.parseInt(numbers[j]) % Integer.parseInt(numbers[j+1]))==0
                    value=value+Integer.parseInt(numbers[j])/(double)Integer.parseInt(numbers[j+1]);   
                }  */                 
            }
            
    }//GEN-LAST:event_equalsButtonActionPerformed
//System.out.println("=" + value);
        String doubleValue=Double.toString(value);

        jLabel2.setText(doubleValue);
    }
    private void multiplyButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyButton1ActionPerformed
        if (equalsCheck==true){
            calculation.clear();
            calculation.add(value);
            input="";
            nonintIndex.clear();
            intIndex.clear();
            intcount=1;
            nonIntcount=0;
            numInt=1;
            nonNumInt=0;
            count=0;
            equalsCheck=false;
            intIndex.add(count);
        }
        calculation.add("*");
        nonintIndex.add(count);
         if (nonIntcount==0){
            nonNumbers[nonNumInt]="*";
            count=count+1;
            nonIntcount=nonIntcount+1;
        }else if((Integer)nonintIndex.get(nonIntcount-1)==count-1) {
            nonNumbers[nonNumInt]=nonNumbers[nonNumInt]+"*";
            count=count+1;
            nonIntcount=nonIntcount+1;
        }else {
            nonNumInt=nonNumInt+1;
            nonNumbers[nonNumInt]="*";
            nonIntcount=nonIntcount+1;
            count=count+1;
        }
        input=input+calculation.get(count-1); 

        jLabel2.setText(input);
    }//GEN-LAST:event_multiplyButton1ActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculatorGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button0;
    private javax.swing.JButton Button1;
    private javax.swing.JButton Button2;
    private javax.swing.JButton Button3;
    private javax.swing.JButton Button4;
    private javax.swing.JButton Button5;
    private javax.swing.JButton Button6;
    private javax.swing.JButton Button7;
    private javax.swing.JButton Button8;
    private javax.swing.JButton Button9;
    private javax.swing.JLabel Display;
    private javax.swing.JButton Lbracket;
    private javax.swing.JButton Rbracket;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton divideButton;
    private javax.swing.JButton dotButton;
    private javax.swing.JButton equalsButton;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton minusButton;
    private javax.swing.JButton multiplyButton1;
    private javax.swing.JButton plusButton;
    private javax.swing.JButton squareButton;
    // End of variables declaration//GEN-END:variables

    private boolean isInteger(String str) {
       
         if (str == null) {
        return false;
    }
    int length = str.length();
    if (length == 0) {
        return false;
    }
    int i = 0;
    if (str.charAt(0) == '-') {
        if (length == 1) {
            return false;
        }
        i = 1;
    }
    for (; i < length; i++) {
        char c = str.charAt(i);
        if (c < '0' || c > '9') {
            return false;
        }
    }
    return true;
    } 
    
    

}
